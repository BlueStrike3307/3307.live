// Code generated by entc, DO NOT EDIT.

package queue

import (
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/zibbp/ganymede/internal/utils"
)

const (
	// Label holds the string label denoting the queue type in the database.
	Label = "queue"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLiveArchive holds the string denoting the live_archive field in the database.
	FieldLiveArchive = "live_archive"
	// FieldOnHold holds the string denoting the on_hold field in the database.
	FieldOnHold = "on_hold"
	// FieldVideoProcessing holds the string denoting the video_processing field in the database.
	FieldVideoProcessing = "video_processing"
	// FieldChatProcessing holds the string denoting the chat_processing field in the database.
	FieldChatProcessing = "chat_processing"
	// FieldProcessing holds the string denoting the processing field in the database.
	FieldProcessing = "processing"
	// FieldTaskVodCreateFolder holds the string denoting the task_vod_create_folder field in the database.
	FieldTaskVodCreateFolder = "task_vod_create_folder"
	// FieldTaskVodDownloadThumbnail holds the string denoting the task_vod_download_thumbnail field in the database.
	FieldTaskVodDownloadThumbnail = "task_vod_download_thumbnail"
	// FieldTaskVodSaveInfo holds the string denoting the task_vod_save_info field in the database.
	FieldTaskVodSaveInfo = "task_vod_save_info"
	// FieldTaskVideoDownload holds the string denoting the task_video_download field in the database.
	FieldTaskVideoDownload = "task_video_download"
	// FieldTaskVideoMove holds the string denoting the task_video_move field in the database.
	FieldTaskVideoMove = "task_video_move"
	// FieldTaskChatDownload holds the string denoting the task_chat_download field in the database.
	FieldTaskChatDownload = "task_chat_download"
	// FieldTaskChatRender holds the string denoting the task_chat_render field in the database.
	FieldTaskChatRender = "task_chat_render"
	// FieldTaskChatMove holds the string denoting the task_chat_move field in the database.
	FieldTaskChatMove = "task_chat_move"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeVod holds the string denoting the vod edge name in mutations.
	EdgeVod = "vod"
	// Table holds the table name of the queue in the database.
	Table = "queues"
	// VodTable is the table that holds the vod relation/edge.
	VodTable = "queues"
	// VodInverseTable is the table name for the Vod entity.
	// It exists in this package in order to avoid circular dependency with the "vod" package.
	VodInverseTable = "vods"
	// VodColumn is the table column denoting the vod relation/edge.
	VodColumn = "vod_queue"
)

// Columns holds all SQL columns for queue fields.
var Columns = []string{
	FieldID,
	FieldLiveArchive,
	FieldOnHold,
	FieldVideoProcessing,
	FieldChatProcessing,
	FieldProcessing,
	FieldTaskVodCreateFolder,
	FieldTaskVodDownloadThumbnail,
	FieldTaskVodSaveInfo,
	FieldTaskVideoDownload,
	FieldTaskVideoMove,
	FieldTaskChatDownload,
	FieldTaskChatRender,
	FieldTaskChatMove,
	FieldUpdatedAt,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "queues"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"vod_queue",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultLiveArchive holds the default value on creation for the "live_archive" field.
	DefaultLiveArchive bool
	// DefaultOnHold holds the default value on creation for the "on_hold" field.
	DefaultOnHold bool
	// DefaultVideoProcessing holds the default value on creation for the "video_processing" field.
	DefaultVideoProcessing bool
	// DefaultChatProcessing holds the default value on creation for the "chat_processing" field.
	DefaultChatProcessing bool
	// DefaultProcessing holds the default value on creation for the "processing" field.
	DefaultProcessing bool
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

const DefaultTaskVodCreateFolder utils.TaskStatus = "pending"

// TaskVodCreateFolderValidator is a validator for the "task_vod_create_folder" field enum values. It is called by the builders before save.
func TaskVodCreateFolderValidator(tvcf utils.TaskStatus) error {
	switch tvcf {
	case "success", "running", "pending", "failed":
		return nil
	default:
		return fmt.Errorf("queue: invalid enum value for task_vod_create_folder field: %q", tvcf)
	}
}

const DefaultTaskVodDownloadThumbnail utils.TaskStatus = "pending"

// TaskVodDownloadThumbnailValidator is a validator for the "task_vod_download_thumbnail" field enum values. It is called by the builders before save.
func TaskVodDownloadThumbnailValidator(tvdt utils.TaskStatus) error {
	switch tvdt {
	case "success", "running", "pending", "failed":
		return nil
	default:
		return fmt.Errorf("queue: invalid enum value for task_vod_download_thumbnail field: %q", tvdt)
	}
}

const DefaultTaskVodSaveInfo utils.TaskStatus = "pending"

// TaskVodSaveInfoValidator is a validator for the "task_vod_save_info" field enum values. It is called by the builders before save.
func TaskVodSaveInfoValidator(tvsi utils.TaskStatus) error {
	switch tvsi {
	case "success", "running", "pending", "failed":
		return nil
	default:
		return fmt.Errorf("queue: invalid enum value for task_vod_save_info field: %q", tvsi)
	}
}

const DefaultTaskVideoDownload utils.TaskStatus = "pending"

// TaskVideoDownloadValidator is a validator for the "task_video_download" field enum values. It is called by the builders before save.
func TaskVideoDownloadValidator(tvd utils.TaskStatus) error {
	switch tvd {
	case "success", "running", "pending", "failed":
		return nil
	default:
		return fmt.Errorf("queue: invalid enum value for task_video_download field: %q", tvd)
	}
}

const DefaultTaskVideoMove utils.TaskStatus = "pending"

// TaskVideoMoveValidator is a validator for the "task_video_move" field enum values. It is called by the builders before save.
func TaskVideoMoveValidator(tvm utils.TaskStatus) error {
	switch tvm {
	case "success", "running", "pending", "failed":
		return nil
	default:
		return fmt.Errorf("queue: invalid enum value for task_video_move field: %q", tvm)
	}
}

const DefaultTaskChatDownload utils.TaskStatus = "pending"

// TaskChatDownloadValidator is a validator for the "task_chat_download" field enum values. It is called by the builders before save.
func TaskChatDownloadValidator(tcd utils.TaskStatus) error {
	switch tcd {
	case "success", "running", "pending", "failed":
		return nil
	default:
		return fmt.Errorf("queue: invalid enum value for task_chat_download field: %q", tcd)
	}
}

const DefaultTaskChatRender utils.TaskStatus = "pending"

// TaskChatRenderValidator is a validator for the "task_chat_render" field enum values. It is called by the builders before save.
func TaskChatRenderValidator(tcr utils.TaskStatus) error {
	switch tcr {
	case "success", "running", "pending", "failed":
		return nil
	default:
		return fmt.Errorf("queue: invalid enum value for task_chat_render field: %q", tcr)
	}
}

const DefaultTaskChatMove utils.TaskStatus = "pending"

// TaskChatMoveValidator is a validator for the "task_chat_move" field enum values. It is called by the builders before save.
func TaskChatMoveValidator(tcm utils.TaskStatus) error {
	switch tcm {
	case "success", "running", "pending", "failed":
		return nil
	default:
		return fmt.Errorf("queue: invalid enum value for task_chat_move field: %q", tcm)
	}
}
