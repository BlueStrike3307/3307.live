// Code generated by ent, DO NOT EDIT.

package channel

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the channel type in the database.
	Label = "channel"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldExtID holds the string denoting the ext_id field in the database.
	FieldExtID = "ext_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDisplayName holds the string denoting the display_name field in the database.
	FieldDisplayName = "display_name"
	// FieldImagePath holds the string denoting the image_path field in the database.
	FieldImagePath = "image_path"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeVods holds the string denoting the vods edge name in mutations.
	EdgeVods = "vods"
	// EdgeLive holds the string denoting the live edge name in mutations.
	EdgeLive = "live"
	// Table holds the table name of the channel in the database.
	Table = "channels"
	// VodsTable is the table that holds the vods relation/edge.
	VodsTable = "vods"
	// VodsInverseTable is the table name for the Vod entity.
	// It exists in this package in order to avoid circular dependency with the "vod" package.
	VodsInverseTable = "vods"
	// VodsColumn is the table column denoting the vods relation/edge.
	VodsColumn = "channel_vods"
	// LiveTable is the table that holds the live relation/edge.
	LiveTable = "lives"
	// LiveInverseTable is the table name for the Live entity.
	// It exists in this package in order to avoid circular dependency with the "live" package.
	LiveInverseTable = "lives"
	// LiveColumn is the table column denoting the live relation/edge.
	LiveColumn = "channel_live"
)

// Columns holds all SQL columns for channel fields.
var Columns = []string{
	FieldID,
	FieldExtID,
	FieldName,
	FieldDisplayName,
	FieldImagePath,
	FieldUpdatedAt,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
