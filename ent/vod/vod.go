// Code generated by entc, DO NOT EDIT.

package vod

import (
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/zibbp/ganymede/internal/utils"
)

const (
	// Label holds the string label denoting the vod type in the database.
	Label = "vod"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldExtID holds the string denoting the ext_id field in the database.
	FieldExtID = "ext_id"
	// FieldPlatform holds the string denoting the platform field in the database.
	FieldPlatform = "platform"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldViews holds the string denoting the views field in the database.
	FieldViews = "views"
	// FieldResolution holds the string denoting the resolution field in the database.
	FieldResolution = "resolution"
	// FieldProcessing holds the string denoting the processing field in the database.
	FieldProcessing = "processing"
	// FieldThumbnailPath holds the string denoting the thumbnail_path field in the database.
	FieldThumbnailPath = "thumbnail_path"
	// FieldWebThumbnailPath holds the string denoting the web_thumbnail_path field in the database.
	FieldWebThumbnailPath = "web_thumbnail_path"
	// FieldVideoPath holds the string denoting the video_path field in the database.
	FieldVideoPath = "video_path"
	// FieldChatPath holds the string denoting the chat_path field in the database.
	FieldChatPath = "chat_path"
	// FieldChatVideoPath holds the string denoting the chat_video_path field in the database.
	FieldChatVideoPath = "chat_video_path"
	// FieldInfoPath holds the string denoting the info_path field in the database.
	FieldInfoPath = "info_path"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeChannel holds the string denoting the channel edge name in mutations.
	EdgeChannel = "channel"
	// EdgeQueue holds the string denoting the queue edge name in mutations.
	EdgeQueue = "queue"
	// Table holds the table name of the vod in the database.
	Table = "vods"
	// ChannelTable is the table that holds the channel relation/edge.
	ChannelTable = "vods"
	// ChannelInverseTable is the table name for the Channel entity.
	// It exists in this package in order to avoid circular dependency with the "channel" package.
	ChannelInverseTable = "channels"
	// ChannelColumn is the table column denoting the channel relation/edge.
	ChannelColumn = "channel_vods"
	// QueueTable is the table that holds the queue relation/edge.
	QueueTable = "queues"
	// QueueInverseTable is the table name for the Queue entity.
	// It exists in this package in order to avoid circular dependency with the "queue" package.
	QueueInverseTable = "queues"
	// QueueColumn is the table column denoting the queue relation/edge.
	QueueColumn = "vod_queue"
)

// Columns holds all SQL columns for vod fields.
var Columns = []string{
	FieldID,
	FieldExtID,
	FieldPlatform,
	FieldType,
	FieldTitle,
	FieldDuration,
	FieldViews,
	FieldResolution,
	FieldProcessing,
	FieldThumbnailPath,
	FieldWebThumbnailPath,
	FieldVideoPath,
	FieldChatPath,
	FieldChatVideoPath,
	FieldInfoPath,
	FieldUpdatedAt,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "vods"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"channel_vods",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDuration holds the default value on creation for the "duration" field.
	DefaultDuration int
	// DefaultViews holds the default value on creation for the "views" field.
	DefaultViews int
	// DefaultProcessing holds the default value on creation for the "processing" field.
	DefaultProcessing bool
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

const DefaultPlatform utils.VodPlatform = "twitch"

// PlatformValidator is a validator for the "platform" field enum values. It is called by the builders before save.
func PlatformValidator(pl utils.VodPlatform) error {
	switch pl {
	case "twitch", "youtube":
		return nil
	default:
		return fmt.Errorf("vod: invalid enum value for platform field: %q", pl)
	}
}

const DefaultType utils.VodType = "archive"

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type utils.VodType) error {
	switch _type {
	case "archive", "live", "highlight", "upload", "clip":
		return nil
	default:
		return fmt.Errorf("vod: invalid enum value for type field: %q", _type)
	}
}
